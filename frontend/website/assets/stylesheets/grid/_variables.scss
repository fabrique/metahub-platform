
// Grid variables
//
// You can add or remove breakpoints at will,
// but be sure to add/remove/modify the relevant mixins as well!

:root {
  // Breakpoints
  --breakpoint-mobile: #{$mobile};
  --breakpoint-portrait: #{$portrait};
  --breakpoint-landscape: #{$landscape};
  --breakpoint-notebook: #{$notebook};
  --breakpoint-desktop: #{$desktop};
  --section-space: 50px;
  // Breakpoint reference (for javascript)
  --breakpoint: var(--breakpoint-mobile);

  @include portrait {
    --breakpoint: var(--breakpoint-portrait);
  }

  @include landscape {
    --breakpoint: var(--breakpoint-landcape);
  }

  @include notebook {
    --breakpoint: var(--breakpoint-notebook);
  }

  @include desktop {
    --breakpoint: var(--breakpoint-desktop);
  }

  // Document constraints
  --document-min-width: #{$min-width};
  --document-max-width: #{$max-width};

  // Grid settings
  --grid-columns: 12;
  --grid-gutter: 20px;
  --grid-spacing: 0;
  --grid-margin: 20px;
  --grid-max-width: 100%;
  --grid-debug-color: #f06;

  @include portrait {
    --grid-gutter: 20px;
    --grid-spacing: 0;
    --grid-margin: 30px;
    --grid-debug-color: #0cf;
  }

  @include landscape {
    --grid-gutter: 25px;
    --grid-spacing: 0;
    --grid-margin: 60px;
    --grid-debug-color: #0f9;
  }

  @include notebook {
    --grid-gutter: 25px;
    --grid-spacing: 0;
    --grid-margin: 120px;
    --grid-max-width: 1360px;
    --grid-debug-color: #c3f;
  }

  @include desktop {
    --grid-gutter: 25px;
    --grid-spacing: 0;
    --grid-margin: 240px;
    --grid-max-width: 100%;
    --grid-debug-color: #333;
  }

  // Component settings
  --margin-md: 20px;
  --margin-lg: 40px;
  --margin-xl: 70px;
  --beat: 10px;

  @include portrait {
    --margin-md: 30px;
    --margin-lg: 40px;
    --margin-xl: 70px;
  }

  @include landscape {
    --margin-md: 30px;
    --margin-lg: 60px;
    --margin-xl: 100px;
  }

  @include notebook {
    --margin-md: 30px;
    --margin-lg: 60px;
  }

  @include desktop {
    --margin-md: 30px;
    --margin-lg: 60px;
  }

  // overlay settings
  --repeating-width: calc(100% / var(--grid-columns));
  --column-width: calc((100% / var(--grid-columns)) - var(--grid-gutter));
  --background-width: calc(100% + var(--grid-gutter));
  --background-columns: repeating-linear-gradient(to right, var(--grid-debug-color), var(--grid-debug-color) var(--column-width), transparent var(--column-width), transparent var(--repeating-width));
}

@mixin container() {
  margin-left: auto;
  margin-right: auto;
  max-width: 1440px;
  padding-left: var(--grid-gutter);
  padding-right: var(--grid-gutter);
}

@mixin grid-container($columns: 'repeat(var(--grid-columns), [column] minmax(0, 1fr))') {
  display: grid;
  grid-gap: var(--grid-spacing) var(--grid-gutter);
  grid-template-columns: unquote($columns);

  @include container;
}

@mixin subgrid-container($columns: auto) {
  display: grid;
  grid-gap: var(--grid-spacing) var(--grid-gutter);
  grid-template-columns: $columns;
}
