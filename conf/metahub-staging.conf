#
# Managed by Ansible (c) True B.V.
#

server {
    listen [::]:80;
    listen 80;
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name metahubfm.fabriquehq.nl;
    ssl_certificate     /etc/ssl/private/letsencrypt/metahubfm.fabriquehq.nl.pem;
    ssl_certificate_key /etc/ssl/private/letsencrypt/metahubfm.fabriquehq.nl.pem;

    include snippets/letsencrypt.conf;

    location / {
        include proxy_params;
        proxy_pass http://metahub-staging;
        auth_basic "Restricted Content";
        auth_basic_user_file /data/www/metahub.fabriquehq.nl/.htpasswd;
    }
    location = /favicon.ico {
        alias /data/www/metahub.fabriquehq.nl/static/images/favicons/favicon.ico;
    }
    location = /robots.txt {
        alias /data/www/metahub.fabriquehq.nl/static/core/robots.txt;
    }
    location /static/ {
        root /data/www/metahub.fabriquehq.nl/;
        expires 30d;
        add_header Vary Accept-Encoding;
        access_log off;
        gzip on;
        gzip_comp_level 6;
        gzip_vary on;
        gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/rss+xml text/javascript image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype;
    }
    location /media/ {
        root /data/www/metahub.fabriquehq.nl/;
        expires 30d;
        add_header Vary Accept-Encoding;
        access_log off;
    }
    location /api/ {
        include proxy_params;
        proxy_pass http://metahub-staging;
        auth_basic off;
        add_header "Access-Control-Allow-Methods" "GET";
        add_header "Access-Control-Allow-Origin" "localhost, fork.de"
    }

    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
}
upstream metahub-staging {
    server unix:/data/www/metahub.fabriquehq.nl/metahub-staging.sock;
}