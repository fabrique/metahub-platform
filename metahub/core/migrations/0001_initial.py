# Generated by Django 2.2 on 2021-04-23 17:18

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import wagtail.contrib.routable_page.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('collection', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailimages', '0022_uploadedimage'),
        ('wagtailcore', '0059_apply_collection_ordering'),
    ]

    operations = [
        migrations.CreateModel(
            name='metahubImage',
            fields=[
                ('image_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailimages.Image')),
                ('alt_text', models.CharField(blank=True, help_text='Optionele beschrijving van wat er in de afbeelding te zien is.', max_length=150, verbose_name='Alt tekst')),
                ('attribution', models.CharField(blank=True, help_text='Artist credit or licensing information, leave blank if not applicable', max_length=4000, verbose_name='Credit')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailimages.image',),
        ),
        migrations.CreateModel(
            name='MetaHubStoryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('is_highlight', models.BooleanField(blank=True, default=False)),
                ('highlight_intro', models.TextField(blank=True, default='', max_length=4096)),
                ('intro', models.TextField(blank=True, max_length=4096)),
                ('reading_time', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('show_reading_time', models.BooleanField(default=False)),
                ('audio', wagtail.core.fields.StreamField([('audio', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('file_title', wagtail.core.blocks.CharBlock()), ('file_subtitle', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('document', wagtail.documents.blocks.DocumentChooserBlock())], max_num=1, min_num=1))])), ('audio_transcript', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock())], blank=True))], blank=True))]))], blank=True)),
                ('discover_in_context', wagtail.core.fields.StreamField([('card_list', wagtail.core.blocks.StructBlock([('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['core.MetaHubStoryPage', 'core.MetaHubObjectPage', 'core.MetaHubObjectSeriesPage']))])))]))], blank=True)),
                ('rest_api_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('hero_header', wagtail.core.fields.StreamField([('header_image', wagtail.core.blocks.StructBlock([('pictures', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('750', '', '2048', '', '', '', True, True, False))))]))])),
                ('content', wagtail.core.fields.StreamField([('single_richtext', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.RichTextBlock())])), ('single_video', wagtail.core.blocks.StructBlock([('video', wagtail.core.blocks.StructBlock([('video', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.StreamBlock([('youtube', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.URLBlock(role='source')), ('title', wagtail.core.blocks.CharBlock(role='title'))])), ('vimeo', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.URLBlock(role='source')), ('title', wagtail.core.blocks.CharBlock(role='title'))]))], max_num=1, min_num=1))])), ('video_preview', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())]))], required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))])), ('single_image', wagtail.core.blocks.StructBlock([('figure', wagtail.core.blocks.StructBlock([('picture', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1920', '', '', '', '', '', True, True, False))), ('caption', wagtail.core.blocks.CharBlock(required=False))]))])), ('single_audio', wagtail.core.blocks.StructBlock([('audio_fragment', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('file_title', wagtail.core.blocks.CharBlock()), ('file_subtitle', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('document', wagtail.documents.blocks.DocumentChooserBlock())], max_num=1, min_num=1))])), ('audio_transcript', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock())], blank=True))], blank=True))]))])), ('double_quote_richtext', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.CharBlock(required=True)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.RichTextBlock(required=True))])), ('double_pictures_richtext', wagtail.core.blocks.StructBlock([('picture_large', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('picture_small', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('text', wagtail.core.blocks.RichTextBlock(required=True))]))])),
                ('related_links', wagtail.core.fields.StreamField([('link_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('links', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('href', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock()), ('mail', wagtail.core.blocks.EmailBlock()), ('phone', wagtail.core.blocks.CharBlock())], max_num=1, min_num=1))]))])))], max_num=1))], blank=True)),
                ('collection_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='collection.CollectionCategory')),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MetaHubSearchPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('search_header', wagtail.core.fields.StreamField([('search_header', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('subtitle', wagtail.core.blocks.CharBlock(required=True)), ('pictures', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('750', '', '2048', '', '', '', True, True, False))))]))])),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MetaHubObjectSeriesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('is_highlight', models.BooleanField(blank=True, default=False)),
                ('highlight_intro', models.TextField(blank=True, default='', max_length=4096)),
                ('intro', models.TextField(blank=True, max_length=4096)),
                ('reading_time', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('show_reading_time', models.BooleanField(default=False)),
                ('audio', wagtail.core.fields.StreamField([('audio', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('file_title', wagtail.core.blocks.CharBlock()), ('file_subtitle', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('document', wagtail.documents.blocks.DocumentChooserBlock())], max_num=1, min_num=1))])), ('audio_transcript', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock())], blank=True))], blank=True))]))], blank=True)),
                ('discover_in_context', wagtail.core.fields.StreamField([('card_list', wagtail.core.blocks.StructBlock([('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['core.MetaHubStoryPage', 'core.MetaHubObjectPage', 'core.MetaHubObjectSeriesPage']))])))]))], blank=True)),
                ('series_id', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('content', wagtail.core.fields.StreamField([('single_richtext', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.RichTextBlock())])), ('single_video', wagtail.core.blocks.StructBlock([('video', wagtail.core.blocks.StructBlock([('video', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.StreamBlock([('youtube', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.URLBlock(role='source')), ('title', wagtail.core.blocks.CharBlock(role='title'))])), ('vimeo', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.URLBlock(role='source')), ('title', wagtail.core.blocks.CharBlock(role='title'))]))], max_num=1, min_num=1))])), ('video_preview', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())]))], required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))])), ('single_image', wagtail.core.blocks.StructBlock([('figure', wagtail.core.blocks.StructBlock([('picture', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1920', '', '', '', '', '', True, True, False))), ('caption', wagtail.core.blocks.CharBlock(required=False))]))])), ('single_audio', wagtail.core.blocks.StructBlock([('audio_fragment', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('file_title', wagtail.core.blocks.CharBlock()), ('file_subtitle', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('document', wagtail.documents.blocks.DocumentChooserBlock())], max_num=1, min_num=1))])), ('audio_transcript', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock())], blank=True))], blank=True))]))])), ('double_quote_richtext', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.CharBlock(required=True)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.RichTextBlock(required=True))])), ('double_pictures_richtext', wagtail.core.blocks.StructBlock([('picture_large', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('picture_small', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('text', wagtail.core.blocks.RichTextBlock(required=True))])), ('objects_choice', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['core.MetaHubObjectPage'], required=False))])))]))], blank=True)),
                ('collection_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='collection.CollectionCategory')),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='collection.CollectionObjectSeriesTag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MetaHubObjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('is_highlight', models.BooleanField(blank=True, default=False)),
                ('highlight_intro', models.TextField(blank=True, default='', max_length=4096)),
                ('intro', models.TextField(blank=True, max_length=4096)),
                ('reading_time', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('show_reading_time', models.BooleanField(default=False)),
                ('audio', wagtail.core.fields.StreamField([('audio', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('file_title', wagtail.core.blocks.CharBlock()), ('file_subtitle', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('document', wagtail.documents.blocks.DocumentChooserBlock())], max_num=1, min_num=1))])), ('audio_transcript', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock())], blank=True))], blank=True))]))], blank=True)),
                ('discover_in_context', wagtail.core.fields.StreamField([('card_list', wagtail.core.blocks.StructBlock([('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['core.MetaHubStoryPage', 'core.MetaHubObjectPage', 'core.MetaHubObjectSeriesPage']))])))]))], blank=True)),
                ('content', wagtail.core.fields.StreamField([('single_richtext', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.RichTextBlock())])), ('single_video', wagtail.core.blocks.StructBlock([('video', wagtail.core.blocks.StructBlock([('video', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.StreamBlock([('youtube', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.URLBlock(role='source')), ('title', wagtail.core.blocks.CharBlock(role='title'))])), ('vimeo', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.URLBlock(role='source')), ('title', wagtail.core.blocks.CharBlock(role='title'))]))], max_num=1, min_num=1))])), ('video_preview', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())]))], required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))])), ('single_image', wagtail.core.blocks.StructBlock([('figure', wagtail.core.blocks.StructBlock([('picture', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1920', '', '', '', '', '', True, True, False))), ('caption', wagtail.core.blocks.CharBlock(required=False))]))])), ('single_audio', wagtail.core.blocks.StructBlock([('audio_fragment', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('file_title', wagtail.core.blocks.CharBlock()), ('file_subtitle', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('document', wagtail.documents.blocks.DocumentChooserBlock())], max_num=1, min_num=1))])), ('audio_transcript', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock())], blank=True))], blank=True))]))])), ('double_quote_richtext', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.CharBlock(required=True)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.RichTextBlock(required=True))])), ('double_pictures_richtext', wagtail.core.blocks.StructBlock([('picture_large', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('picture_small', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('text', wagtail.core.blocks.RichTextBlock(required=True))]))], blank=True)),
                ('collection_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='collection.CollectionCategory')),
                ('object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associated_page', to='collection.BaseCollectionObject')),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='collection.CollectionObjectTag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MetaHubMyCollectionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('allow_download', models.BooleanField(default=True)),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MetaHubHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('search_header', wagtail.core.fields.StreamField([('search_header', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('subtitle', wagtail.core.blocks.CharBlock(required=True)), ('pictures', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('750', '', '2048', '', '', '', True, True, False))))]))])),
                ('theme_block', wagtail.core.fields.StreamField([('theme_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('subtitle', wagtail.core.blocks.CharBlock(required=True)), ('theme_categories', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock(required=True))), ('themes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['core.MetaHubStoryPage'])), ('intro_text', wagtail.core.blocks.TextBlock(help_text='Leave blank to use the text of the story page', required=False))])))]))])),
                ('highlights_block', wagtail.core.fields.StreamField([('highlights_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('introduction', wagtail.core.blocks.RichTextBlock(required=True)), ('highlights', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['core.MetaHubObjectPage'])), ('intro_text', wagtail.core.blocks.TextBlock(help_text='Leave blank to use the text of the object page', required=False))])))]))])),
                ('collection_categories_block', wagtail.core.fields.StreamField([('collection_categories_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('subtitle', wagtail.core.blocks.CharBlock(required=True)), ('image', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], required=True)), ('href', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external_open_in_same', wagtail.core.blocks.URLBlock()), ('external_open_in_new', wagtail.core.blocks.URLBlock())], max_num=1, min_num=1))]))])))]))])),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MetaHubContentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('hero_header', wagtail.core.fields.StreamField([('header_image', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('subtitle', wagtail.core.blocks.CharBlock()), ('picture', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('750', '', '2048', '', '', '', True, True, False)))]))])),
                ('content', wagtail.core.fields.StreamField([('single_richtext', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.RichTextBlock())])), ('single_image', wagtail.core.blocks.StructBlock([('figure', wagtail.core.blocks.StructBlock([('picture', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1920', '', '', '', '', '', True, True, False))), ('caption', wagtail.core.blocks.CharBlock(required=False))]))])), ('double_pictures_richtext', wagtail.core.blocks.StructBlock([('picture_large', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('picture_small', wagtail.core.blocks.StructBlock([('source', wagtail.images.blocks.ImageChooserBlock())], resolution=('1024', '', '', '', '', '', False, True, False))), ('text', wagtail.core.blocks.RichTextBlock(required=True))])), ('cookies', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock())]))])),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='MetaHubCategoryOverviewPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('promo_title', models.CharField(blank=True, help_text='Optioneel, wordt getoond in plaats van titel als deze pagina op andere plekken gelinkt wordt', max_length=100, verbose_name='Promo titel')),
                ('promo_intro', models.TextField(blank=True, help_text='Korte tekst die wordt getoond als deze pagina op andere plekken gelinkt wordt', verbose_name='Promo intro')),
                ('promo_link', models.CharField(blank=True, help_text="Tekst van het 'lees meer' linkje als deze pagina op andere plekken gelinkt wordt", max_length=50, verbose_name='Lees meer label')),
                ('twitter_hashtags', models.CharField(blank=True, help_text='Commagescheiden lijst van termen die als hashtag worden toegevoegd wanneer gedeeld op twitter, zonder de #', max_length=100, verbose_name='Twitter hashtags')),
                ('overview_category', models.CharField(choices=[('story', 'Story'), ('object', 'Objekt'), ('object_series', 'Objektseries')], max_length=100)),
                ('promo_image', models.ForeignKey(blank=True, help_text='Optioneel, wordt getoond als deze pagina op andere plekken gelinkt wordt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Promo afbeelding')),
                ('share_image', models.ForeignKey(blank=True, help_text='Optioneel, anders wordt promo afbeelding gebruikt, anders de pagina visual en anders de standaard deel afbeelding', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Share afbeelding')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_site_description', models.CharField(blank=True, help_text="Beschrijving van de site voor zoekmachine's e.d.", max_length=300, verbose_name='Meta description')),
                ('footer_content_simple', wagtail.core.fields.StreamField([('footer', wagtail.core.blocks.StructBlock([('links', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('href', wagtail.core.blocks.StructBlock([('source', wagtail.core.blocks.StreamBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('external', wagtail.core.blocks.URLBlock()), ('mail', wagtail.core.blocks.EmailBlock()), ('phone', wagtail.core.blocks.CharBlock())], max_num=1, min_num=1))]))])))]))])),
                ('default_share_image', models.ForeignKey(blank=True, help_text="Afbeelding voor op Facebook e.d. voor pagina's die zelf geen afbeelding hebben.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.metahubImage', verbose_name='Standaard share image')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'verbose_name': 'Algemene instellingen',
                'verbose_name_plural': 'Algemene instellingen',
            },
        ),
    ]
